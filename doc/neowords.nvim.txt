*neowords.nvim.txt*              For NVIM v0.8.0             Last change: 2023

==============================================================================
Table of Contents                            *neowords.nvim-table-of-contents*

1. Neowords.nvim                                 |neowords.nvim-neowords.nvim|
2. Show cases                                       |neowords.nvim-show-cases|
  - Sub words only                   |neowords.nvim-show-cases-sub-words-only|
  - Big words only                   |neowords.nvim-show-cases-big-words-only|
  - Sub words with dots and commas|neowords.nvim-show-cases-sub-words-with-dots-and-commas|
  - Numbers and hex color words|neowords.nvim-show-cases-numbers-and-hex-color-words|
3. Configure as you wish                 |neowords.nvim-configure-as-you-wish|

==============================================================================
1. Neowords.nvim                                 *neowords.nvim-neowords.nvim*






It’s a Neovim plugin that provides flexible and reliable hops by any type of
words. It reimplements basic `w`, `e`, `b`, `ge` movements but allows a user to
have a fine tune over them.

It: - treats `corner cases` well (`cw` and others). - works with `non-ascii`
text; - works also in `insert` mode;


==============================================================================
2. Show cases                                       *neowords.nvim-show-cases*


SUB WORDS ONLY                       *neowords.nvim-show-cases-sub-words-only*

>lua
    -- Ignore anything except sub words!
    local CamelCase = "sneak_UPPER_MIXEDCase" .. "1234"
    --    ^    ^       ^     ^     ^    ^         ^
<

Configuration ~

>lua
    local neowords = require("neowords")
    local p = neowords.pattern_presets
    
    local subword_hops = neowords.get_word_hops(
      p.sneak_case,
      p.camel_case,
      p.upper_case,
      p.number,
      p.hex_color
    )
    
    vim.keymap.set({ "n", "x", "o" }, "w", subword_hops.forward_start)
    vim.keymap.set({ "n", "x", "o" }, "e", subword_hops.forward_end)
    vim.keymap.set({ "n", "x", "o" }, "b", subword_hops.backward_start)
    vim.keymap.set({ "n", "x", "o" }, "ge", subword_hops.backward_end)
<




BIG WORDS ONLY                       *neowords.nvim-show-cases-big-words-only*

>lua
    -- Ignore anything except big words!
    local CamelCase = "sneak_UPPER_MIXEDCase" .. "1234" .. "dashed-case"
    --    ^            ^                          ^         ^
<

Configuration ~

>lua
    local neowords = require("neowords")
    local p = neowords.pattern_presets
    
    local bigword_hops = neowords.get_word_hops(
      p.any_word,
      p.number,
      p.hex_color
    )
    
    vim.keymap.set({ "n", "x", "o" }, "w", bigword_hops.forward_start)
    vim.keymap.set({ "n", "x", "o" }, "e", bigword_hops.forward_end)
    vim.keymap.set({ "n", "x", "o" }, "b", bigword_hops.backward_start)
    vim.keymap.set({ "n", "x", "o" }, "ge", bigword_hops.backward_end)
<




SUB WORDS WITH DOTS AND COMMAS*neowords.nvim-show-cases-sub-words-with-dots-and-commas*

>lua
    -- Jump over subwords, dots and commas!
    error("Unable to " .. description .. ": " .. error_message, 2)
    --     ^      ^    ^  ^           ^       ^  ^     ^      ^ ^
<

Configuration ~

>lua
    local neowords = require("neowords")
    local p = neowords.pattern_presets
    
    local hops = neowords.get_word_hops(
      p.sneak_case,
      p.camel_case,
      p.upper_case,
      p.number,
      p.hex_color,
      "\\v\\.+",
      "\\v,+"
    )
    
    vim.keymap.set({ "n", "x", "o" }, "w", hops.forward_start)
    vim.keymap.set({ "n", "x", "o" }, "e", hops.forward_end)
    vim.keymap.set({ "n", "x", "o" }, "b", hops.backward_start)
    vim.keymap.set({ "n", "x", "o" }, "ge", hops.backward_end)
<




NUMBERS AND HEX COLOR WORDS*neowords.nvim-show-cases-numbers-and-hex-color-words*

>lua
    -- Ignore anything except number and color words!
    local CamelCase = "99 sneak_UPPER_MIXEDCase" .. "1234" .. "dashed-case"
    --                 ^                             ^
    local my_cool_color = "#E3B8EF"
    --                     ^
<

Configuration ~

>lua
    local neowords = require("neowords")
    local p = neowords.pattern_presets
    
    local hops = neowords.get_word_hops(
      p.number,
      p.hex_color
    )
    
    vim.keymap.set({ "n", "x", "o" }, "w", hops.forward_start)
    vim.keymap.set({ "n", "x", "o" }, "e", hops.forward_end)
    vim.keymap.set({ "n", "x", "o" }, "b", hops.backward_start)
    vim.keymap.set({ "n", "x", "o" }, "ge", hops.backward_end)
<




==============================================================================
3. Configure as you wish                 *neowords.nvim-configure-as-you-wish*

>lua
    local neowords = require("neowords")
    local presets = neowords.pattern_presets
    
    local hops = neowords.get_word_hops(
      -- Any vim patterns separated by comma here.
      -- Check examples above
    )
    
    vim.keymap.set({ "n", "x", "o" }, "w", hops.forward_start)
    vim.keymap.set({ "n", "x", "o" }, "e", hops.forward_end)
    vim.keymap.set({ "n", "x", "o" }, "b", hops.backward_start)
    vim.keymap.set({ "n", "x", "o" }, "ge", hops.backward_end)
<

If you can’t configure your case, make an issue!

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
